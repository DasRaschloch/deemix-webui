input[type='text'],
input[type='password'],
input[type='number'] {
	appearance: none;
	margin-bottom: 8px;
	border: 0px solid black;
	border-radius: 4px;
	background-color: var(--secondary-background);
	padding: 0px 8px;
	width: calc(100% - 16px);
	line-height: 36px;
	color: var(--foreground);
}

input[type='checkbox'] {
	appearance: none;
	display: inline-block;
	position: relative;
	opacity: 0.5;
	margin: 3px;
	border: 2px solid gray;
	border-radius: 2px;
	background-color: none;
	padding: 7px;

	&:checked {
		opacity: 1;
		margin: 3px;
		border: 0px solid var(--primary-color);
		border-radius: 2px;
		background-color: var(--primary-color);
		background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' height='18' viewBox='3 3 18 18' width='18'%3E%3Cpath fill='%23ffffff' d='M 10,17 5,12 6.41,10.59 10,14.17 17.59,6.58 19,8 Z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E");
		background-position: center center;
		padding: 9px;
		color: var(--primary-text);
	}
}

select {
	appearance: none;
	margin-bottom: 8px;
	border: 0px solid black;
	border-radius: 4px;
	background-clip: border-box;
	background-color: var(--secondary-background);
	background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' height='24' viewBox='0 0 24 24' width='24'%3E%3Cpath style='fill%3A%23000000%3Bfill-opacity%3A0.25' d='M7 10l5 5 5-5z'/%3E%3Cpath d='M0 0h24v24H0z' fill='none'/%3E%3C/svg%3E");
	background-position: calc(100% - 8px) center;
	background-repeat: no-repeat;
	background-size: 24px;
	padding: 0px 40px 0px 8px;
	width: 100%;
	line-height: 36px;
	color: var(--foreground);
}

p {
	word-break: break-word;
}

img {
	&.rounded {
		border-radius: 5px;
	}

	&.circle {
		border-radius: 50%;
	}
}

.single-cover {
	display: inline-block;
	position: relative;
	color: white;
}

@layer base {
	a {
		color: dodgerblue;

		// &:visited {
		// 	color: dodgerblue;
		// }
	}
}

.clickable {
	cursor: pointer !important;
}

.coverart {
	// ? Why?
	background-color: var(--secondary-background);
}

// ? Maybe make a component?
.cover_container {
	position: relative;

	.coverart {
		display: block;
		backface-visibility: hidden;
		transition: 0.5s ease;
		opacity: 1;
		width: 100%;
		height: auto;
	}

	.download_overlay {
		position: absolute;
		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);
		transition: 0.5s ease;
		opacity: 0;
		border: 0px;
		border-radius: 50%;
		// background-color: #000000;
		padding: 0px;
		min-width: 32px;
		height: 44px;
		text-align: center;

		i {
			cursor: pointer;
			padding: 10px;
			color: white;
		}

		&:focus {
			opacity: 1;
		}
	}

	&:hover {
		.coverart {
			opacity: 0.75;
		}

		.download_overlay {
			opacity: 1;
			border: 0px;
		}
	}
}
